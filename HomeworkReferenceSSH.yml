Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.small
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      g3.8xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.



Mappings:
  AWSRegionArch2AMI: #NOT REGION SPECIFIC
    us-east-1: #true
      AMI: ami-6869aa05 # our guy!
    us-west-2:
      AMI: ami-7172b611
    us-west-1: #true
      AMI: ami-31490d51 # this guy!
    eu-west-1:
      AMI: ami-f9dd458a
    eu-central-1:
      AMI: ami-ea26ce85
    ap-northeast-1:
      AMI: ami-374db956
    ap-northeast-2:
      AMI: ami-2b408b45
    ap-southeast-1:
      AMI: ami-a59b49c6
    ap-southeast-2:
      AMI: ami-dc361ebf
    ap-south-1:
      AMI: ami-ffbdd790
    us-east-2:
      AMI: ami-f6035893
    sa-east-1:
      AMI: ami-6dd04501
    cn-north-1:
      AMI: ami-8e6aa0e3

Resources:
  MyEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      AvailabilityZone: us-west-2 
     
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'LatestAmiId'
      SecurityGroup:
        -!ImportValue Network-Stack-SecurityGroupID
      VPCId:
        !ImportValue Network-Stack-VPCID
      PublicSubnet:
        !ImportValue Network-Stack-SubnetID
      Tags:
        - Key: Name
          Value: myInstance
  
  IPAddress:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'EC2Instance'
      EIP: !Ref 'IPAddress'


Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !Ref 'IPAddress'
  



  